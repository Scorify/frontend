query Me {
  me {
    id
    username
    role
    number
  }
}

mutation Login($username: String!, $password: String!) {
  login(username: $username, password: $password) {
    name
    token
    expires
    path
    domain
    secure
    httpOnly
  }
}

mutation ChangePassword($oldPassword: String!, $newPassword: String!) {
  changePassword(oldPassword: $oldPassword, newPassword: $newPassword)
}

query Checks {
  checks {
    id
    name
    weight
    config
    editable_fields
    source {
      name
      schema
    }
  }

  sources {
    name
    schema
  }
}

mutation CreateCheck(
  $name: String!
  $weight: Int!
  $source: String!
  $config: JSON!
  $editable_fields: [String!]!
) {
  createCheck(
    name: $name
    weight: $weight
    source: $source
    config: $config
    editable_fields: $editable_fields
  ) {
    id
    name
    source {
      name
      schema
    }
  }
}

mutation UpdateCheck(
  $id: ID!
  $name: String
  $weight: Int
  $config: JSON
  $editable_fields: [String!]
) {
  updateCheck(
    id: $id
    name: $name
    weight: $weight
    config: $config
    editable_fields: $editable_fields
  ) {
    id
    name
    source {
      name
      schema
    }
  }
}

mutation DeleteCheck($id: ID!) {
  deleteCheck(id: $id)
}

query Users {
  users {
    id
    username
    role
    number
  }
}

mutation CreateUser(
  $username: String!
  $password: String!
  $role: Role!
  $number: Int
) {
  createUser(
    username: $username
    password: $password
    role: $role
    number: $number
  ) {
    id
    username
    role
    number
  }
}

mutation UpdateUser(
  $id: ID!
  $username: String
  $password: String
  $number: Int
) {
  updateUser(
    id: $id
    username: $username
    password: $password
    number: $number
  ) {
    id
    username
    number
  }
}

mutation DeleteUser($id: ID!) {
  deleteUser(id: $id)
}

subscription GlobalNotification {
  globalNotification {
    message
    type
  }
}

subscription EngineState {
  engineState
}

mutation StartEngine {
  startEngine
}

mutation StopEngine {
  stopEngine
}

mutation SendGlobalNotification($message: String!, $type: NotificationType!) {
  sendGlobalNotification(message: $message, type: $type)
}

mutation AdminLogin($id: ID!) {
  adminLogin(id: $id) {
    name
    token
    expires
    path
    domain
    secure
    httpOnly
  }
}

mutation AdminBecome($id: ID!) {
  adminBecome(id: $id) {
    name
    token
    expires
    path
    domain
    secure
    httpOnly
  }
}

query Configs {
  configs {
    id
    check {
      name
      weight
      source {
        name
        schema
      }
    }
    config
  }
}

mutation EditConfig($id: ID!, $config: JSON!) {
  editConfig(id: $id, config: $config) {
    id
  }
}

query Scoreboard {
  scoreboard {
    round {
      number
    }
    teams {
      username
      number
    }
    checks {
      name
    }
    statuses {
      error
      status
      update_time
    }
    scores {
      user {
        username
        number
      }
      score
    }
  }
}

subscription ScoreboardUpdate {
  scoreboardUpdate {
    round {
      number
    }
    teams {
      username
      number
    }
    checks {
      name
    }
    statuses {
      error
      status
      update_time
    }
    scores {
      user {
        username
        number
      }
      score
    }
  }
}
